CREATE TABLE note (
    id SERIAL PRIMARY KEY,
    file_path TEXT NOT NULL,
    title TEXT,
    content TEXT NOT NULL,
    ai_tags TEXT[],  -- ARRAY(Text)
    ai_summary TEXT,
    created_at TIMESTAMP,
    last_summarized_at TIMESTAMP,
    last_embedded_at TIMESTAMP
);

CREATE TABLE blog (
    id SERIAL PRIMARY KEY,
    file_path TEXT NOT NULL,
    slug TEXT,
    title TEXT,
    body TEXT NOT NULL,
    author TEXT,
    published_at TIMESTAMP,
    ai_tags TEXT[],  -- ARRAY(Text)
    ai_summary TEXT,
    last_summarized_at TIMESTAMP,
    last_embedded_at TIMESTAMP
);

CREATE TABLE photo (
    id SERIAL PRIMARY KEY,
    file_path TEXT NOT NULL,
    caption TEXT,
    taken_at TIMESTAMP,
    location TEXT,
    camera_model TEXT,
    gps_lat DOUBLE PRECISION,
    gps_lng DOUBLE PRECISION,
    ai_tags TEXT[],  -- ARRAY(Text)
    ai_summary TEXT,
    last_summarized_at TIMESTAMP,
    last_embedded_at TIMESTAMP
);

CREATE TABLE rednote (
    note_id TEXT PRIMARY KEY,
    note_url TEXT,
    note_type TEXT,
    user_id TEXT,
    home_url TEXT,
    nickname TEXT,
    avatar TEXT,
    title TEXT,
    description TEXT,
    liked_count INTEGER,
    collected_count INTEGER,
    comment_count INTEGER,
    share_count INTEGER,
    video_cover TEXT,
    video_addr TEXT,
    image_list TEXT[],
    tags TEXT[],
    upload_time TIMESTAMP,
    ip_location TEXT,
    last_update_time TIMESTAMP,
    ai_tags TEXT[],
    ai_summary TEXT,
    video_download_at TIMESTAMP,
    image_download_at TIMESTAMP,
    last_summarized_at TIMESTAMP,
    last_embedded_at TIMESTAMP
);

CREATE TABLE daily_hot (
    id SERIAL PRIMARY KEY,
    category TEXT NOT NULL,
    title TEXT NOT NULL,
    description TEXT,
    cover TEXT,
    hot_score INTEGER,
    url TEXT,
    mobile_url TEXT,
    publish_time TIMESTAMP,
    collected_at TIMESTAMP,
    ai_tags TEXT[],
    ai_summary TEXT,
    extra JSON,
    last_summarized_at TIMESTAMP,
    last_embedded_at TIMESTAMP
);



-- 先安装 pgvector 扩展（只需一次）：
CREATE EXTENSION IF NOT EXISTS vector;

CREATE TABLE unified_embeddings (
    id SERIAL PRIMARY KEY,
    entry_type TEXT,          -- 'note' | 'blog' | 'photo'
    entry_id   INTEGER,       -- 对应实体 id
    text       TEXT,          -- 格式化后的知识片段
    embedding  vector(1024)    -- 这里写你的 embedding 维度
);

-- 推荐建索引加速检索：
CREATE INDEX ON unified_embeddings USING ivfflat (embedding vector_cosine_ops);